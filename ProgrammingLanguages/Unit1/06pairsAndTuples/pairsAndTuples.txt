* Tuples and lists *

So far: numbers, booleans, conditionals, variables, functions
- Now ways to build up data with multiple parts
- Java examples: classes with fields, arrays

Now:
- Tuples: fixed "number of pieces" that may have different types.

Coming Soon:
- Lists: any "number of pieces" that all have the same type

Later:
- Other more general ways to create compound data

* Pairs (2-tuples)

Need a way to build pairs and a way to access the pieces

Build:

Syntax: (e1, e2)

Evaluation: Evaluate e1 to v1 and e2 to v2; result is (v1, v2)
- A pair of values is a value

Type-checking: If e1 has type ta and e2 has type tb, then the pair expression
has type ta * tb
- A new kind of type

Access:

Syntax: #1 e and #2 e

Evaluation: Evaluate e to a pair of values and return first or second piece
- Example: If e is a variable x, then look up x in the environment

Type-checking: If e has type ta * tb, then #1 e has type ta and #2 e has type tb.

* Tuples *

Actually, you can have tuples with more than two pairs
- A new feature: a generalization of pairs

- (e1, e2, ..., en)
- ta * tb * ... * tn
#1 e, #2 e, #3 e, ...
