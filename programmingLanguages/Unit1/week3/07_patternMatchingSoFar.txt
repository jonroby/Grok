datatype t = C1 of t1 | C2 of t2 | ... | Cn of tn

Adds type t and constructors Ci of type ti -> t
- Ci v is a value, i.e., the result "includes the tag"

Omit "of t" for constructors that are just tags, no underlying data
- Such as Ci is a value of type t

Given an expression of type t, use case expressions to:
- See which variant (tag) it has
- Extract underlying data once you know which variant

case e of p1 => e1 | p2 => e2 | ... | pn => en


