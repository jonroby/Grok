'a list * 'a list -> 'a list
is more general than
string list * string list -> string list

A type t1 is more general than the type t2 if you can take t1,
replace its variables consistently and get t2.

You might also see type variables with a second quote.
- Example: ''a list * ''a list -> bool

These are equality types that arise from the = operator
- The = operator works on lots of types: int, string, tuples
containing all equality types, ...
- But not all types: function types, reals, ...

The rules for more general are exactly the same except you have
to replace an equality type variable with a type that can be
used with =
- A strange feature of ML because = is special

''a * ''a -> string
fun same_thing (x,y) =
  if x=y then "yes" else "no"

fun is_three x =
  if x=3 then "yes" else "no"

You can ignore the warning about polyequal.
